/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package clinic;

import java.awt.Window;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import net.proteanit.sql.DbUtils;
import java.util.List;
import java.util.ArrayList;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author Admin
 */
public class Appointement1 extends javax.swing.JFrame {

    /**
     * Creates new form Doctor_Nurse
     */
    public Appointement1() {
        initComponents();
        DisplayAppoint();
   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        logout = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        patient = new javax.swing.JLabel();
        user = new javax.swing.JLabel();
        payement = new javax.swing.JLabel();
        dasboard = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        AppName = new javax.swing.JTextField();
        AppTime = new javax.swing.JComboBox<>();
        AppPhone = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        AppTable = new javax.swing.JTable();
        Edit = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Save = new javax.swing.JButton();
        Clear = new javax.swing.JButton();
        SearchTextField = new javax.swing.JTextField();
        Search = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        AppDate = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 0, 102));

        jLabel16.setIcon(new javax.swing.ImageIcon("C:\\Users\\admin\\Downloads\\cost.png")); // NOI18N

        logout.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        logout.setForeground(new java.awt.Color(255, 255, 255));
        logout.setText("Logout");
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
        });

        jLabel18.setIcon(new javax.swing.ImageIcon("C:\\Users\\admin\\Downloads\\menu.png")); // NOI18N

        jLabel19.setIcon(new javax.swing.ImageIcon("C:\\Users\\admin\\Downloads\\logout.png")); // NOI18N

        jLabel7.setIcon(new javax.swing.ImageIcon("C:\\Users\\admin\\Downloads\\healthcare.png")); // NOI18N

        jLabel8.setIcon(new javax.swing.ImageIcon("C:\\Users\\admin\\Downloads\\medical-team.png")); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 3, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Cabinet Nohayla");

        jLabel4.setIcon(new javax.swing.ImageIcon("C:\\Users\\admin\\Downloads\\sign.png")); // NOI18N

        patient.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        patient.setForeground(new java.awt.Color(255, 255, 255));
        patient.setText("Patients");
        patient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                patientMouseClicked(evt);
            }
        });

        user.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        user.setForeground(new java.awt.Color(255, 255, 255));
        user.setText("Users");
        user.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userMouseClicked(evt);
            }
        });

        payement.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        payement.setForeground(new java.awt.Color(255, 255, 255));
        payement.setText("Payment");
        payement.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                payementMouseClicked(evt);
            }
        });

        dasboard.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        dasboard.setForeground(new java.awt.Color(255, 255, 255));
        dasboard.setText("Dashboard");
        dasboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dasboardMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(logout)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(patient)
                            .addComponent(user)
                            .addComponent(dasboard)
                            .addComponent(payement))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4))
                .addGap(98, 98, 98)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(patient))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(user))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(payement))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(dasboard))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 398, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel19)
                    .addComponent(logout))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 17)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 102));
        jLabel9.setText("Appointements");

        jLabel25.setBackground(new java.awt.Color(255, 0, 102));
        jLabel25.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 0, 102));
        jLabel25.setText("Name");

        jLabel27.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 0, 102));
        jLabel27.setText("Phone");

        jLabel28.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 0, 102));
        jLabel28.setText("Date");

        jLabel29.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 0, 102));
        jLabel29.setText("Timetable");

        AppTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "9h", "10h", "11h", "12h", "14h", "15h", "16h", "17h" }));

        AppTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "name", "phone", "date", "timetable"
            }
        ));
        AppTable.setColumnSelectionAllowed(true);
        AppTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AppTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(AppTable);
        AppTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        Edit.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        Edit.setForeground(new java.awt.Color(255, 0, 102));
        Edit.setText("  Edit");
        Edit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EditMouseClicked(evt);
            }
        });
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });

        Delete.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        Delete.setForeground(new java.awt.Color(255, 0, 102));
        Delete.setText("Delete");
        Delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeleteMouseClicked(evt);
            }
        });
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        Save.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        Save.setForeground(new java.awt.Color(255, 0, 102));
        Save.setText("  Save");
        Save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SaveMouseClicked(evt);
            }
        });
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        Clear.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        Clear.setForeground(new java.awt.Color(255, 0, 102));
        Clear.setText("Clear");
        Clear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClearMouseClicked(evt);
            }
        });
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        Search.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        Search.setForeground(new java.awt.Color(255, 0, 102));
        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        jLabel26.setBackground(new java.awt.Color(255, 0, 102));
        jLabel26.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 0, 102));
        jLabel26.setText("Serach if the patient exist");

        jCheckBox1.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jCheckBox1.setForeground(new java.awt.Color(255, 0, 102));
        jCheckBox1.setText("Valid Appointement");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1002, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(AppTime, 0, 164, Short.MAX_VALUE)
                    .addComponent(AppPhone, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(AppName, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(AppDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Clear, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                    .addComponent(Delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Edit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Save, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(89, 89, 89)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Search)
                .addGap(25, 25, 25))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(188, 188, 188)
                .addComponent(jCheckBox1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addGap(77, 77, 77)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AppName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Save)
                    .addComponent(SearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Search)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(AppPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Edit))
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Delete)
                        .addComponent(jLabel28))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(AppDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)))
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AppTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29)
                    .addComponent(Clear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EditActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DeleteActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SaveActionPerformed
Connection con = null;
Statement st = null;
ResultSet rs = null;
    private void SaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SaveMouseClicked
        if (AppName.getText().isEmpty() || AppPhone.getText().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Missing Information");  
    } else {
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mydb", "root", "#Noha@2002#");
            // Création d'un objet Statement
            PreparedStatement add = con.prepareStatement("insert into appointement (nom, phone, date, heure) values (?,?,?,?)");
            
            add.setString(1, AppName.getText());
            add.setString(2, AppPhone.getText());
            java.sql.Date sqlDate = new java.sql.Date(AppDate.getDate().getTime());
            add.setString(3, sqlDate.toString());
            add.setString(4, AppTime.getSelectedItem().toString());
            
            int row = add.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Appointement added successfully");

            con.close();
            DisplayAppoint();
            Clear();
        } catch(Exception Ex) {
            Ex.printStackTrace();
        }
    }
    }//GEN-LAST:event_SaveMouseClicked

    private void ClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClearMouseClicked
        Clear();
    }//GEN-LAST:event_ClearMouseClicked
int key =0;
    private void AppTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AppTableMouseClicked
  DefaultTableModel model = (DefaultTableModel) AppTable.getModel();
    int MyIndex = AppTable.getSelectedRow();
    key = Integer.valueOf(model.getValueAt(MyIndex, 0).toString());
    AppName.setText(model.getValueAt(MyIndex, 1).toString());
    AppPhone.setText(model.getValueAt(MyIndex, 2).toString());
    // Utiliser un SimpleDateFormat pour convertir la chaîne de caractères en java.util.Date
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    try {
        Date dateValue = dateFormat.parse(model.getValueAt(MyIndex, 3).toString());
        AppDate.setDate(dateValue);
    } catch (ParseException ex) {
        ex.printStackTrace();
        // Gérer l'erreur de conversion de la date
    }
    String TimeValue = model.getValueAt(MyIndex, 4).toString();
    AppTime.setSelectedItem(TimeValue);


    }//GEN-LAST:event_AppTableMouseClicked

    private void EditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditMouseClicked
        if(key == 0 ){
            JOptionPane.showMessageDialog(this, "Select The Appointement");
        }
        else{
            try{
                
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mydb", "root", "#Noha@2002#");
              String Query = "UPDATE mydb.appointement SET nom=?, phone=?, date=?, heure=?  WHERE idapp=?";
                    PreparedStatement updateStatement = con.prepareStatement(Query);
                    updateStatement.setString(1, AppName.getText());
                    updateStatement.setString(2, AppPhone.getText());
                    // Convert java.util.Date to java.sql.Date
                    java.sql.Date sqlDate = new java.sql.Date(AppDate.getDate().getTime());
                    updateStatement.setDate(3, sqlDate);
                    updateStatement.setString(4, AppTime.getSelectedItem().toString());

                    updateStatement.setInt(5, key);

                    updateStatement.executeUpdate();

                JOptionPane.showMessageDialog(this, "Appointement Updated Successfully");
                DisplayAppoint();
                Clear();
            }
            catch(Exception Ex){
                Ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_EditMouseClicked
private String selectedPatientName;

private void fillPatientNameInPayment() {
    if (key == 0) {
        JOptionPane.showMessageDialog(this, "Select The Appointment");
    } else {
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mydb", "root", "#Noha@2002#");
            String query = "SELECT nom FROM mydb.appointement WHERE idapp = ?";
            PreparedStatement statement = con.prepareStatement(query);
            statement.setInt(1, key);

            ResultSet rs = statement.executeQuery();
            if (rs.next()) {
                selectedPatientName = rs.getString("nom");
                openPaymentPage(selectedPatientName);
            } else {
                JOptionPane.showMessageDialog(this, "Failed to fetch Appointment details");
            }

            con.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
}
    private void DeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteMouseClicked
       if(key == 0 ){
        JOptionPane.showMessageDialog(this, "Select The Appointement");
    }
    else {
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mydb", "root", "#Noha@2002#");
            String Query = "DELETE FROM mydb.appointement WHERE idapp=?";
            PreparedStatement deleteStatement = con.prepareStatement(Query);
            deleteStatement.setInt(1, key);

            int result = deleteStatement.executeUpdate();
            if (result > 0) {
                JOptionPane.showMessageDialog(this, "Appointement Deleted Successfully");
                DisplayAppoint();
            } else {
                JOptionPane.showMessageDialog(this, "Failed to delete Appointement");
            }
            DisplayAppoint();
            Clear();
            con.close();
        } catch (Exception Ex) {
            Ex.printStackTrace();
        }
    }
    }//GEN-LAST:event_DeleteMouseClicked

    private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
        Window[] windows = Window.getWindows();
    for (Window window : windows) {
        if (window instanceof JFrame) {
            window.dispose();
        }
    }
    // Ouvrir la page de connexion
    new Login1().setVisible(true);
    }//GEN-LAST:event_logoutMouseClicked

    private void patientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_patientMouseClicked
        this.dispose();
        new Patient1().setVisible(true);
    }//GEN-LAST:event_patientMouseClicked

    private void userMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userMouseClicked
       this.dispose();
        new User().setVisible(true);
    }//GEN-LAST:event_userMouseClicked

    private void payementMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_payementMouseClicked
        this.dispose();
        new Payment1().setVisible(true);
    }//GEN-LAST:event_payementMouseClicked

    private void dasboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dasboardMouseClicked

      
        String userType = SessionManager.getUserType();

        // Redirection vers le tableau de bord en fonction du type d'utilisateur
        switch (userType) {
            case "Doctor":
            dashboardDoctor doctorDashboard = new dashboardDoctor();
            doctorDashboard.showDashboard();
            break;
            case "Nurse":
            dashboardNurse nurseDashboard = new dashboardNurse();
            nurseDashboard.showDashboard();
            break;
            case "Receptionist":
            dashboardReceptionist receptionistDashboard = new dashboardReceptionist();
            receptionistDashboard.showDashboard();
            break;
            default:
            // Gérer les autres cas si nécessaire
        }

       this.dispose(); // Ferme la fenêtre actuelle
    }//GEN-LAST:event_dasboardMouseClicked

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ClearActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
       String patientName = SearchTextField.getText();
    if (!patientName.isEmpty()) {
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mydb", "root", "#Noha@2002#");
            PreparedStatement searchStatement = con.prepareStatement("SELECT * FROM patient WHERE nom = ?");
            searchStatement.setString(1, patientName);
            ResultSet searchResult = searchStatement.executeQuery();
            
            if (searchResult.next()) {
                // Le patient est trouvé, afficher ses informations dans les champs correspondants
                AppName.setText(searchResult.getString("nom"));
                AppPhone.setText(searchResult.getString("telephone"));
                // Vous pouvez afficher d'autres informations du patient si nécessaire
                
                // Effacer les champs de recherche
                SearchTextField.setText("");
            } else {
                // Le patient n'est pas trouvé, ajouter un nouveau patient
                JOptionPane.showMessageDialog(this, "Patient not found, please add a new patient.");
                
                // Vous pouvez ajouter ici le code pour ajouter un nouveau patient
            }
            
            con.close();
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: Unable to search for patient.");
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please enter a patient name to search.");
    }
    }//GEN-LAST:event_SearchActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
    // Obtenez l'état de la case à cocher
    boolean isChecked = jCheckBox1.isSelected();
    
    // Si la case est cochée, ouvrez la page de paiement
    if (isChecked) {
        fillPatientNameInPayment();
    }
    }//GEN-LAST:event_jCheckBox1ActionPerformed
private void DisplayAppoint(){
    try{
        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mydb", "root", "#Noha@2002#");
        st = con.createStatement();
        rs = st.executeQuery("select * from mydb.appointement");
        AppTable.setModel(DbUtils.resultSetToTableModel(rs));
    }catch(Exception Ex){
        
    }
}
private void openPaymentPage(String patientName) {
    // Insérez ici le code pour ouvrir la page de paiement
    this.dispose();
    Payment1 paymentPage = new Payment1();
    paymentPage.setPatientName(selectedPatientName); // Utilisez le nom du patient sélectionné
    paymentPage.setVisible(true);
}


private void Clear(){
    AppName.setText("");
    AppPhone.setText("");
    AppDate.setDate(null);
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Appointement1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Appointement1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Appointement1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Appointement1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Appointement1().setVisible(true);
            }
        });
    }





    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser AppDate;
    private javax.swing.JTextField AppName;
    private javax.swing.JTextField AppPhone;
    private javax.swing.JTable AppTable;
    private javax.swing.JComboBox<String> AppTime;
    private javax.swing.JButton Clear;
    private javax.swing.JButton Delete;
    private javax.swing.JButton Edit;
    private javax.swing.JButton Save;
    private javax.swing.JButton Search;
    private javax.swing.JTextField SearchTextField;
    private javax.swing.JLabel dasboard;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel logout;
    private javax.swing.JLabel patient;
    private javax.swing.JLabel payement;
    private javax.swing.JLabel user;
    // End of variables declaration//GEN-END:variables
}
